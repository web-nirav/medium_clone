import React, { useState, useEffect } from 'react';
import BackendErrorMessage from 'components/backendErrorMessages'

const ArticleForm = ({ onSubmit, errors, intialValues }) => {
    const [title, setTitle] = useState('')
    const [description, setDescription] = useState('')
    const [body, setBody] = useState('')
    const [tagList, setTagList] = useState('')

    // console.log('fields', title, description, body, tagList)

    useEffect(() => {
        if (!intialValues) {
            return
        }
        setTitle(intialValues.title)
        setDescription(intialValues.description)
        setBody(intialValues.body)
        setTagList(intialValues.tagList)
    }, [intialValues])

    const handleSubmit = (event) => {
        event.preventDefault()

        const article = {
            title, description, body, tagList: tagList.split(' ')
        }
        onSubmit(article)

    }

    return (
        <div className="editor-page">
            <div className="container page">
                <div className="row">
                    <div className="col-md-10 offset-md-1 col-xs-12">
                        {errors && <BackendErrorMessage backendErrors={errors} />}
                        <form onSubmit={handleSubmit}>
                            <fieldset>
                                <fieldset className="form-group">
                                    <input type="text" value={title} onChange={e => setTitle(e.target.value)} className="form-control form-control-lg" placeholder="Article title" />
                                </fieldset>
                                <fieldset className="form-group">
                                    <input type="text" value={description} onChange={e => setDescription(e.target.value)} className="form-control form-control-lg" placeholder="What is this article about?" />
                                </fieldset>
                                <fieldset className="form-group">
                                    <textarea value={body} onChange={e => setBody(e.target.value)} rows="8" className="form-control" placeholder="Write your article (in markdown)"></textarea>
                                </fieldset>
                                <fieldset className="form-group">
                                    <input type="text" value={tagList} onChange={e => setTagList(e.target.value)} className="form-control form-control-lg" placeholder="Enter tags" />
                                </fieldset>
                                <fieldset className="form-group">
                                    <button type="submit" className="btn btn-lg btn-primary pull-xs-right">
                                        Publish Article
                                    </button>
                                </fieldset>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default ArticleForm;