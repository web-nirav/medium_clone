import React, { useState, useEffect, useContext } from 'react';
import { Redirect } from 'react-router-dom'
import ArticleForm from 'components/articleForm'
import useFetch from 'hooks/useFetch'
import { CurrentUserContext } from 'contexts/currentUser'

const EditArticle = ({ match }) => {
    const slug = match.params.slug
    const apiUrl = `articles/${slug}`
    const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false)
    const [{ response: updateArticleResponse, error: updateArticleError }, doUpdateArticle] = useFetch(apiUrl);
    const [{ response: fetchArticleResponse }, doFetchArticle] = useFetch(apiUrl)
    const [currentUserState] = useContext(CurrentUserContext)
    const [intialValues, setInitialValues] = useState(null)

    // console.log('fetchArticleResponse', fetchArticleResponse && fetchArticleResponse.article)
    const onSubmit = (article) => {
        // console.log('article', article)
        // console.log('currentUserState', currentUserState)
        doUpdateArticle({
            method: 'put',
            data: {
                article
            }
        })
    }

    useEffect(() => {
        doFetchArticle()
    }, [doFetchArticle])

    useEffect(() => {
        if (!fetchArticleResponse) {
            return;
        }
        setInitialValues({
            title: fetchArticleResponse.article.title,
            description: fetchArticleResponse.article.description,
            body: fetchArticleResponse.article.body,
            tagList: fetchArticleResponse.article.tagList.join(' '),
        })
    }, [fetchArticleResponse])

    useEffect(() => {
        if (!updateArticleResponse) {
            return
        }
        setIsSuccessfulSubmit(true)
    }, [updateArticleResponse])

    if (currentUserState.isLoggedIn === null) {
        return null
    }

    if (currentUserState.isLoggedIn === false) {
        return <Redirect to="/" />
    }

    if (isSuccessfulSubmit) {
        return <Redirect to={`/articles/${slug}`} />
    }

    return (<div><ArticleForm
        errors={(updateArticleError && updateArticleError.errors) || {}}
        intialValues={intialValues}
        onSubmit={onSubmit} /></div>);
}

export default EditArticle;